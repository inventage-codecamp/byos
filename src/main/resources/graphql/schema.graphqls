type Query {
    allAuthors: [Author!]!
    authorById(id: ID!): Author
    authorsByIds(id: [ID!]!): [Author!]!
    allBooks: [Book!]!
    test: Test!
    allOrders: [ShopOrder!]!
    allUsers: [ShopUser!]!
    allTrees: [Tree!]!
    allBookStores: [BookStore!]!
    booksByYear(publishedin: Int!): [Book!]!
}

type Test {
    value: String
}

type Book {
    id: ID!
    title: String!
    publishedin: Int!
    author: Author!
}

type Author {
    id: ID!
    firstName: String
    lastName: String!
    books: [Book!]!
    distinguished: Boolean
}

type BookStore {
    name: String!
    books: [Book!]!
    b2b: [Book_To_Bookstore!]!
}

type Book_To_Bookstore {
    book: Book!
    stock: Int
}

type Language {
    id: ID!
    cd: String!
    description: String
}

type ShopUser {
    user_id: ID!
    username: String!
    email: String!
    orders: [ShopOrder!]!
}

type ShopOrder {
    order_id: ID!
    order_number: String!
    user: ShopUser
    order_date: String!
}

type Tree {
    id: ID!
    label: String!
    parent: Tree
    children: [Tree!]!
}
